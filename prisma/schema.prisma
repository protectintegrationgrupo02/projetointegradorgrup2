generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model administradores {
  id              Int          @id @default(autoincrement())
  nomeEmpres      String?      @map("nome_empres")@db.VarChar(50)
  cnpj            String?      @db.VarChar(30)
  ruaAv           String?      @map("rua_av")@db.VarChar(30)
  numEnd          Int?         @map("num_end")
  complemento     String?      @db.VarChar(20)
  bairro          String?      @db.VarChar(20)
  cep             Int?         
  idUsuario       Int?         @map("id_usuario")
  usuarios     usuarios?      @relation(fields: [idUsuario], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "adms_ibfk_1")
  funcionarios funcionarios[]
  planos       planos[]

  @@index([idUsuario], map: "id_usuario")
}

model agendamentos {
  id            Int        @id @default(autoincrement())
  tempo         DateTime?  @db.DateTime(0)
  servico       String?    @db.VarChar(25)
  funcionario   String?    @db.VarChar(20)
  formPague     String?    @map("form_pague")@db.VarChar(30)
  idFuncionario Int?       @map("id_funcionario")
  funcionarios funcionarios? @relation(fields: [idFuncionario], references: [matricula])
  @@index([idFuncionario], map: "id_funcionario")       
  idUsuario     Int?       @map("id_usuario")
  usuarios      usuarios?  @relation(fields: [idUsuario], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "agendamentos_ibfk_1")
  servicos      servicos[]

  @@index([idUsuario], map: "id_usuario")
}

model funcionarios {
  matricula       Int     @id @default(autoincrement())
  nomeFun        String?  @map("nome_fun")@db.VarChar(50)
  telefoneFun    String?  @map("telefone_fun")@db.VarChar(15)
  cpfFun         String?  @map("cpf_fun")@db.VarChar(30)
  ruaAv          String?  @map("rua_av")@db.VarChar(20)
  numEnd            Int?  @map("num_end")
  complemento    String?  @db.VarChar(15)
  bairro         String?  @db.VarChar(15)
  cep               Int?
  idAdministradores Int?  @map("id_administradores")
  administradores   administradores?   @relation(fields: [idAdministradores], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "funcionarios_ibfk_1")
  @@index([idAdministradores], map: "id_administradores")
  agendamentos  agendamentos[]
}

model planos {
  id              Int          @id @default(autoincrement())
  tipoPlano       String?      @map("tipo_plano")@db.VarChar(50)
  quantProfissional  Int?      @map("quant_profissional")
  valorPlano       Float?      @map("valor_plano")@db.Float
  listSuport      String?      @map("list_suport")@db.VarChar(50)
  idAdministradores  Int?      @map("id_administradores")
  administradores   administradores?    @relation(fields: [idAdministradores], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "planos_ibfk_1")
  precos             precos[]

  @@index([idAdministradores], map: "id_administradores")
}

model precos {
  id           Int      @id @default(autoincrement())
  nomePlano   String?   @map("nome_plano")@db.VarChar(15)
  valorPlano Decimal?   @map("valor_plano")@db.Decimal(10, 2)
  desconto   String?    @db.VarChar(10)
  idPlano       Int?    @map("id_plano")
  planos     planos?  @relation(fields: [idPlano], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "precos_ibfk_1")

  @@index([idPlano], map: "id_plano")
}

model servicos {
  id           Int           @id @default(autoincrement())
  tipoServico  String?       @map("tipo_servico")@db.VarChar(50)
  descricao    String?       @db.VarChar(100)
  valor         Float?       @db.Float
  idAgendament    Int?       @map("id_agendament")
  agendamentos agendamentos? @relation(fields: [idAgendament], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "servicos_ibfk_1")

  @@index([idAgendament], map: "id_agendament")
}

model usuarios {
  id            Int            @id @default(autoincrement())
  nomeCompleto  String?        @map("nome_completo")@db.VarChar(50)
  telefone      String?        @db.VarChar(30)
  cpfUser       String?        @map("cpf_user")@db.VarChar(30)
  email         String?        @db.VarChar(50)
  senha         String?        @db.VarChar(50)
  administradores              administradores[]
  agendamentos                 agendamentos[]
}
